---
title: Problem set 2
date: 2025-01-26
---

Total points: 16.

In these exercises, we will explore a subset of the NHANES dataset to investigate potential differences in systolic blood pressure across groups defined by self reported race.

### Instructions {.unnumbered}

-   For each exercise, we want you to write a single line of code using the pipe (`|>`) to chain together multiple operations. This doesn't mean the code must fit within 80 characters or be written on a single physical line, but rather that the entire sequence of operations can be executed as one continuous line of code without needing to assign intermediate values or create new variables. Use this within reason. If you have a really complex calculation as a subprocess, you can create a new line of code.

-   All of your code and answers for this pset should be submitted as a single file `pset-02-R-data-analysis.qmd`.

    For example, these are three separate lines of code:

```{r}
#| eval: false
x <- 100; x <- sqrt(x); log10(x)
```

```         
Whereas this is considered one line of code using the pipe:
```

```{r}
#| eval: false
100 |> 
  sqrt() |> 
  log10()
```

-   Copy this quarto document to edit your code for this assignment. Upon submission, you should submit both the qmd file and the rendered file generated as an html document.

-   For the exercises that ask to generate a graph, show the graph as well.

-   For exercises that require you to display tabular results, use the `kable` function to format the output as a clean, readable table. Do not display the raw dataframe directlyâ€”only show the nicely formatted table using `kable`.

-   Use only two significant digits for the numbers displayed in the tables.

-   Submit both the html and the qmd files using Git.

-   You will need the following libraries:

```{r}
#| message: false
library(dplyr)
library(tidyr)
library(forcats)
library(ggplot2)
library(knitr)
library(NHANES)
options(digits = 2)
```

-   The `.qmd` file must be able to render properly on the GSI's computer. They will already have the necessary packages installed, so there is no need to include code for installing packages. Just focus on writing the code that uses these packages.

### Exercises {.unnumbered}

1.  (1 point) Filter the `NHANES` data to only include survey year 2011-2012. Save the resulting table in `dat`. This table should have 5,000 rows and 76 columns and can be accessed via the variable `NHANES`.

```{r}
dat <- NHANES |>
  filter(SurveyYr == "2011_12")
dim(dat)
```

2.  (1 point) Using `dat`, compute the average and standard deviation (SD) for the *combined systolic blood pressure* (SBP) (given by `BPSysAve`) reading for males and females separately. Show us a data frame with two rows (female and male) and two columns (average and SD). `NA` values should be removed.

```{r}
dat1 <- dat |>
  group_by(Gender) |>
  summarise(
    Average = mean(BPSysAve, na.rm = TRUE),
    SD = sd(BPSysAve, na.rm = TRUE)
  )
dat1
```

3.  (1 point) Because of the large difference in the average between males and females, we will perform the rest of the analysis separately for males and females.

Compute the average and SD for SBP for each race variable in column `Race3` for females and males separately. The resulting table should have four columns for sex, race, average, and SD, respectively, and 12 rows (one for each strata). Arrange the result from highest to lowest average.

```{r}
dat2 <- dat |>
  group_by(Gender, Race3) |>
  summarise(
    Average = mean(BPSysAve, na.rm = TRUE),
    SD = sd(BPSysAve, na.rm = TRUE)
  ) |>
  arrange(desc(Average))
dat2
```

4.  (1 point) Repeat the previous exercise but add two columns to the final table to show a 95% confidence interval for the mean. Specifically, add columns with the lower and upper bounds of the interval with names `lower` and `upper`, respectively. The formula for these values is

$$
\bar{X} \pm 1.96 \, s / \sqrt{n}
$$ with $\bar{X}$ the sample average and $s$ the sample standard deviation. This table will simply add two more columns to the table generated in the previous exercise: one column for the lower and upper bound, respectively.

```{r}
dat2 <- dat2 |>
  mutate(
    n = n(),
    Lower = Average - (1.96 * SD) / sqrt(n),
    Upper = Average + (1.96 * SD) / sqrt(n)
  ) |>
  select(Gender, Race3, Average, SD, Lower, Upper)
dat2
```

5.  (1 point) Make a graph of showing the results from the previous exercise. Specifically, plot the averages for each group as points and confidence intervals as error bars (use the geometry `geom_errorbar`). Order the groups from lowest to highest average (the average of the males and females averages). Use `facet_wrap` to make a separate plot for females and males. Label your axes with *Race* and *Average* respectively, add the title *Comparing systolic blood pressure across groups*, and the caption *Bars represent 95% confidence intervals*.

```{r}
ggplot(dat2, 
       aes(x = reorder(Race3, -Average), y = Average, color = Gender)) +
  geom_point(size = 3) +
  geom_errorbar(aes(ymin = Lower, ymax = Upper), width = 0.2) +
  facet_wrap(~Gender) +
  labs(
    x = "Race",
    y = "Average",
    title = "Comparing systolic blood pressure across groups",
    caption = "Bars represent 95% confidence intervals") +
  theme_minimal()
```

6.  (2 points) In the plot above we see that the confidence intervals don't overlap when comparing the `White` and `Mexican` groups. We also see a substantial difference between `Mexican` and `Hispnanic`. Before concluding that there is a difference between groups, we will explore if differences in age, a very common *confounder*, explain the differences.

Ignoring race for now, create a table like the one in the previous exercise but show the average SBP by sex and age group (`AgeDecade`) including upper and lower bounds. The groups should be ordered chronologically. As before make a separate plot for males and females. Make sure to filter our observations with no `AgeDecade` listed.

```{r}
dat3 <- dat |>
  group_by(Gender, AgeDecade) |>
  summarise(
    Average = mean(BPSysAve, na.rm = TRUE),
    SD = sd(BPSysAve, na.rm = TRUE),
    n = n(),
    Lower = Average - 1.96*SD / sqrt(n),
    Upper = Average + 1.96*SD / sqrt(n)
  ) |>
  filter(!is.na(AgeDecade)) |>
  arrange(AgeDecade)
dat3

ggplot(dat3, 
       aes(x = AgeDecade, y = Average, color = Gender)) +
  geom_point(size = 3) +
  geom_errorbar(aes(ymin = Lower, ymax = Upper), width = 0.2) +
  facet_wrap(~Gender) +
  labs(
    x = "Race",
    y = "Average",
    title = "Comparing systolic blood pressure across groups",
    caption = "Bars represent 95% confidence intervals") +
  theme_minimal()
```

7.  (2 points) We note that for both males and females the SBP increases with age. To explore if age is indeed a confounder we need to check if the groups have different age distributions.

Explore the age distributions of each `Race3` group to determine if the groups are comparable. Make a histogram of `Age` for each `Race3` group and stack them vertically. Generate two columns of graphs for males and females, respectively. That is, create a grid of plots. In the histograms, create bins increments of 5 years up to 80. Make sure to give each row a seperate y-scale.

Below the graph, comment on what you notice about the age distributions and how this can explain the difference in BP between the *White* and *Mexican* groups.

```{r}
ggplot(dat, aes(x = Age, fill = Race3)) +
  geom_histogram(binwidth = 5, alpha = 0.7, position = "identity") +
  facet_grid(Gender ~ Race3, scales = "free_y") +
  labs(
    x = "Age (years)",
    y = "Count",
    title = "Age Distribution by Race and Gender",
    subtitle = "Age grouped in bins of 5 years",
    caption = "Separate y-scale for each row"
  ) +
  scale_x_continuous(breaks = seq(0, 80, 5)) +
  theme_minimal()

## Age Distribution of White: The age distribution for the White group is relatively even across different age bins, with a noticeable peak in middle and older age ranges.
## Age Distribution of Mexican Group: The age distribution for the Mexican group skews younger, with a large proportion of individuals in the 20-40 age range and fewer in older age ranges.
## Difference in BP: The difference in age distributions between the White and Mexican groups suggests that age could act as a confounder in the analysis of SBP between these groups. The higher proportion of older individuals in the White group may artificially inflate their average SBP compared to the Mexican group, where younger individuals dominate the sample.
```

8.  (1 point) Summarize the results shown in the graph by compute the median age for each `Race3` group and the percent of individuals that are younger than 18. Order the rows by median age. The resulting data frame should have 6 rows (one for each group) and three columns to denote group, median age, and children respectively.

```{r}
dat4 <- dat |>
  group_by(Race3) |>
  summarise(
    MedianAge = median(Age, na.rm = TRUE),
    PercentChildren = mean(Age < 18, na.rm = TRUE) * 100
  ) |>
  arrange(MedianAge)
dat4
```

9.  (1 point) Given the age distribution between two populations, we can't conclude that there are differences in SBP based just on the population averages. The observed differences are likely due to age differences rather than genetic differences. We will therefore stratify by group and then compare SBP. But before we do this, we might need redefine `dat` to avoid small groups.

Write code that computes the number of observations in each gender, age decade, and race combination. Show the groups with less than five observations. Make sure to remove the rows with no BPSysAve measurments before calculating the number of observations. Show a table with four columns representing gender, age stratum, group, and the number of individuals in that group. Make sure to include combinations with 0 individuals (hint: use `complete`).

```{r}
dat5 <- dat |>
  filter(!is.na(BPSysAve)) |>
  group_by(Gender, AgeDecade, Race3) |>
  summarise(Count = n(), .groups = "drop") |>
  complete(Gender, AgeDecade, Race3, fill = list(Count = 0)) |>
  filter(Count < 5)
dat5
```

10. (1 point) Based on the observations made in the previous exercise, we will redefine `dat` but with the following:

    -   As before, include only survey year 2011-2012.
    -   Remove the observations with no age group reported.
    -   Remove the 0-9 age group and drop it as a factor in `AgeDecade`.
    -   Combine the 60-69 and 70+ age groups into a 60+ group.
    -   Remove observations reporting `Other` in `Race3` and drop it as a factor.
    -   Rename the variable `Race3` to `Race`.

    Hints:

    -   Note that the levels in `AgeDecade` start with a space.
    -   You can use the `fct_collapse` function in the **forcats** to combine factors.

```{r}
dat <- dat |>
  filter(SurveyYr == "2011_12") |>
  filter(!is.na(AgeDecade)) |>
  filter(AgeDecade != "0-9") |>
  mutate(
    AgeDecade = fct_collapse(
      AgeDecade,
      "60+" = c("60-69", "70+")
    ),
    Race3 = fct_drop(Race3, only = "Other")
  ) |>
  rename(Race = Race3)
dat
```

11. (1 point) Create a plot that shows the average BPS for each age decade. Show the different race groups with color and lines joining them. Generate two plots: one for males and one for females.

```{r}
dat6 <- dat |>
  group_by(Gender, AgeDecade, Race) |>
  summarise(
    Average = mean(BPSysAve, na.rm = TRUE),
    SD = sd(BPSysAve, na.rm = TRUE),
    n = n(),
    Lower = Average - 1.96 * SD / sqrt(n),
    Upper = Average + 1.96 * SD / sqrt(n),
    .groups = "drop"
  )

ggplot(dat6 |> filter(Gender == "male"), aes(x = AgeDecade, y = Average, color = Race, group = Race)) +
  geom_line(size = 1) +
  geom_point(size = 2) +
  labs(
    x = "Age Decade",
    y = "Average SBP",
    title = "Average SBP by Age Decade for Males",
    color = "Race"
  ) +
  theme_minimal()

ggplot(dat6 |> filter(Gender == "female"), aes(x = AgeDecade, y = Average, color = Race, group = Race)) +
  geom_line(size = 1) +
  geom_point(size = 2) +
  labs(
    x = "Age Decade",
    y = "Average SBP",
    title = "Average SBP by Age Decade for Females",
    color = "Race"
  ) +
  theme_minimal()
```

12. (2 points) Based on the plot above, pick two groups that you think are consistently different, and remake the plot from the previous exercise but just for these two groups. Add confidence intervals, and remove the lines. Put the confidence intervals for each age stratum next to each other, and use color to represent the two groups. Comment on your finding.

```{r}
selected_groups <- dat6 |>
  filter(Race %in% c("Asian", "Black"))

ggplot(selected_groups, aes(x = AgeDecade, y = Average, fill = Race)) +
  geom_bar(stat = "identity", position = "dodge", alpha = 0.7) +
  geom_errorbar(
    aes(ymin = Lower, ymax = Upper),
    position = position_dodge(width = 0.9),
    width = 0.2
  ) +
  labs(
    x = "Age Decade",
    y = "Average SBP",
    title = "Comparison of Average SBP Between Asian and Black Groups",
    fill = "Race"
  ) +
  theme_minimal()

## The graph shows a clear trend that the average systolic blood pressure (SBP) increases with age for both the Asian and Black groups. Except groups 0-9 and 70+, for most age decades, the Black group consistently exhibits a higher average SBP compared to the Asian group, with the difference becoming more pronounced in older age groups (50+ years).
## The error bars, representing 95% confidence intervals, indicate that the variability in SBP is higher in the older age groups (e.g., 60-69 and 70+). This suggests that the SBP within these age groups is more heterogeneous, particularly for the Black group.
## For the older age groups (e.g., 50+), the confidence intervals for the two groups are distinct, suggesting that the differences in SBP between the Asian and Black groups are more likely to be statistically significant in these age ranges.
```

13. (1 point) For the two groups that you selected above, compute the difference in average SBP between the two groups for each age strata. Show a table with three columns representing age strata, difference for females, difference for males.

```{r}
selected_groups <- selected_groups |>
  group_by(Gender, AgeDecade, Race) |>
  summarise(Average = mean(Average, na.rm = TRUE), .groups = "drop")

difference_table <- selected_groups |>
  pivot_wider(
    names_from = Race,
    values_from = Average,
    names_prefix = "Avg_"
  ) |>
  mutate(
    Difference = Avg_Black - Avg_Asian
  ) |>
  select(Gender, AgeDecade, Difference) |>
  pivot_wider(
    names_from = Gender,
    values_from = Difference,
    names_prefix = "Diff_"
  )
difference_table

```
